apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: logtrain
  namespace: akkeris-system
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: logtrain
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: logtrain
    spec:
      containers:
      - command:
        - logtrain
        env:
        - name: NODE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: KUBERNETES
          value: "true"
        - name: ENVOY
          value: "true"
        - name: HTTP_EVENTS
          value: "true"
        - name: HTTP_SYSLOG
          value: "true"
        - name: SYSLOG_TCP
          value: "true"
        - name: SYSLOG_UDP
          value: "true"
        image: akkeris/logtrain:v1
        imagePullPolicy: Always
        name: logtrain
        ports:
        - containerPort: 9000
          protocol: TCP
        - containerPort: 9001
          protocol: TCP
        - containerPort: 9002
          protocol: TCP
        - containerPort: 9003
          protocol: UDP
        resources:
          limits:
            memory: 64Mi
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/log
          name: varlog
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: logtrain
      serviceAccountName: logtrain
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /var/log
          type: ""
        name: varlog
      - hostPath:
          path: /var/lib/docker/containers
          type: ""
        name: varlibdockercontainers
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate